/* 1 */
{
    "_id" : ObjectId("58c3f639cb4a8238e061bf17"),
    "question" : "What will the below code print out?:\n\n\"use strict\";\nvar aVar = 3\nVar = 1\nconsole.log(Var)",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "1", 
        "3"
    ],
    "correctAnswers" : [ 
        "Uncaught ReferenceError"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-25T14:56:38.730Z"),
    "wrongAttempts" : 1,
    "lastAssessed" : ISODate("2017-04-24T14:56:38.730Z"),
    "correctAttempts" : 4,
    "netCorrectAttempts" : 3
}

/* 2 */
{
    "_id" : ObjectId("58c406f8cb4a8238e061bf1c"),
    "question" : "What will the below code print out?\n\n\"use strict\";\n\nvar name = 'igloo'\n\nvar code = \"var name = 'asim';\"\n\neval(code)\n\nconsole.log(name)",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "asim"
    ],
    "correctAnswers" : [ 
        "igloo"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-25T15:57:52.806Z"),
    "wrongAttempts" : 5,
    "lastAssessed" : ISODate("2017-04-24T15:57:52.806Z"),
    "correctAttempts" : 4,
    "netCorrectAttempts" : 2
}

/* 3 */
{
    "_id" : ObjectId("58c4074fcb4a8238e061bf1d"),
    "question" : "What will this code print?\n\n(function(){\n\nvar a = 3\n\n})();\n\nconsole.log(typeof a !== 'undefined')",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "true", 
        "undefined"
    ],
    "correctAnswers" : [ 
        "false"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-25T15:01:53.158Z"),
    "wrongAttempts" : 1,
    "lastAssessed" : ISODate("2017-04-24T15:01:53.158Z"),
    "correctAttempts" : 3,
    "netCorrectAttempts" : 3
}

/* 4 */
{
    "_id" : ObjectId("58c4254c25ddf96491b76770"),
    "question" : "Consider the code snippet below. What will the console output be?\n\n(function(x) {\n\n    return (function(y) {\n        console.log(x)\n    })(2)\n\n})(1);",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "2"
    ],
    "correctAnswers" : [ 
        "1"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-25T15:02:26.914Z"),
    "correctAttempts" : 2,
    "lastAssessed" : ISODate("2017-04-24T15:02:26.914Z"),
    "netCorrectAttempts" : 2
}

/* 5 */
{
    "_id" : ObjectId("58c5592f5b0d5216fbdc8717"),
    "question" : "What will be the output of FIRST console.log in the code below?\n\nvar salary = \"1000$\"\n\n(function () {\n    console.log(salary)\n    var salary = \"5000$\"\n    console.log(salary)\n})()",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "Uncaught ReferenceError", 
        "5000$", 
        "1000$"
    ],
    "correctAnswers" : [ 
        "undefined"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-25T15:08:30.498Z"),
    "correctAttempts" : 4,
    "lastAssessed" : ISODate("2017-04-24T15:08:30.498Z"),
    "netCorrectAttempts" : 2
}

/* 6 */
{
    "_id" : ObjectId("58c40e63cb4a8238e061bf20"),
    "question" : "In 1885, who extrapolated the hypothesis of the exponential nature of forgetting?",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [],
    "correctAnswers" : [ 
        "Hermann Ebbinghaus"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-25T17:54:21.488Z"),
    "lastAssessed" : ISODate("2017-04-24T17:54:21.488Z"),
    "correctAttempts" : 5,
    "wrongAttempts" : 1,
    "netCorrectAttempts" : 2
}

/* 7 */
{
    "_id" : ObjectId("58c56dd25b0d5216fbdc8719"),
    "question" : "What does the below code print out?\n\n'use strict';\n\n(function (){\n  console.log(this)\n})()",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "Uncaught ReferenceError", 
        "global"
    ],
    "correctAnswers" : [ 
        "undefined"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-25T18:42:15.577Z"),
    "wrongAttempts" : 3,
    "lastAssessed" : ISODate("2017-04-24T18:42:15.577Z"),
    "correctAttempts" : 6,
    "netCorrectAttempts" : 2,
    "explanation" : "In 'use strict' mode, global this refers to 'undefined'"
}

/* 8 */
{
    "_id" : ObjectId("58c56e355b0d5216fbdc871a"),
    "question" : "What does the below code print out?\n'use strict';\n\nvar animal = {\n  kind: 'Cow',\n  which: function () {\n    console.log(this.kind)\n  }\n}\nanimal.which()",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "undefined", 
        "global"
    ],
    "correctAnswers" : [ 
        "Cow"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-25T18:43:18.178Z"),
    "lastAssessed" : ISODate("2017-04-24T18:43:18.178Z"),
    "wrongAttempts" : 3,
    "correctAttempts" : 6,
    "netCorrectAttempts" : 2
}

/* 9 */
{
    "_id" : ObjectId("58c56f045b0d5216fbdc871b"),
    "question" : "What does the below code print out?\n\n'use strict'\n\nvar animal = {\n  kind: 'Cow',\n  which: function () {\n    console.log(this.kind)\n  }\n}\nvar animalFunc = animal.which\nanimalFunc()",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "undefined", 
        "Cow"
    ],
    "correctAnswers" : [ 
        "Uncaught TypeError"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-24T19:48:35.058Z"),
    "wrongAttempts" : 16,
    "lastAssessed" : ISODate("2017-04-24T19:48:35.058Z"),
    "correctAttempts" : 6,
    "explanation" : "It just is",
    "netCorrectAttempts" : 0
}

/* 10 */
{
    "_id" : ObjectId("58c56fce5b0d5216fbdc871d"),
    "question" : "What does the code below print out?\n\n'use strict'\n\nfunction sayHello () {\n  console.log(this)\n}\nsayHello.call('john')\n",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "bob", 
        "bobbings"
    ],
    "correctAnswers" : [ 
        "john"
    ],
    "__v" : 2,
    "toBeAssessedNext" : ISODate("2017-04-24T19:25:24.080Z"),
    "correctAttempts" : 3,
    "lastAssessed" : ISODate("2017-04-24T19:24:24.080Z"),
    "wrongAttempts" : 2,
    "netCorrectAttempts" : 1
}

/* 11 */
{
    "_id" : ObjectId("58c3f563cb4a8238e061bf16"),
    "question" : "What will the code below print out?:\n\n\"use strict\";\nvar a = 1\nvar b = {}\nfunction foo(x) {\n  x = 2\n}\n \nfoo(a)\nconsole.log(a);",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [],
    "correctAnswers" : [ 
        "1"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-24T19:09:35.743Z"),
    "correctAttempts" : 2,
    "lastAssessed" : ISODate("2017-04-24T19:09:35.743Z"),
    "wrongAttempts" : 1
}

/* 12 */
{
    "_id" : ObjectId("58c407b5cb4a8238e061bf1e"),
    "question" : "What will this code print?\n\nconsole.log(moo)\n\nvar moo = function() {\n  console.log(\"loo\")\n}",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "loo", 
        "moo"
    ],
    "correctAnswers" : [ 
        "undefined"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-24T19:09:42.957Z"),
    "correctAttempts" : 2,
    "lastAssessed" : ISODate("2017-04-24T19:09:42.957Z"),
    "wrongAttempts" : 1
}

/* 13 */
{
    "_id" : ObjectId("58c56f785b0d5216fbdc871c"),
    "question" : "What does the below code print out?\n\n'use strict'\n\nfunction sayHello () {\n  console.log(this)\n}\nsayHello()",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [],
    "correctAnswers" : [ 
        "undefined"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-24T19:09:47.784Z"),
    "correctAttempts" : 2,
    "lastAssessed" : ISODate("2017-04-24T19:09:47.784Z"),
    "wrongAttempts" : 1
}

/* 14 */
{
    "_id" : ObjectId("58c048ab964c2f691113782b"),
    "question" : "What does 'merci' mean in French?",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "Thank you"
    ],
    "correctAnswers" : [ 
        "Please"
    ],
    "__v" : 5,
    "toBeAssessedNext" : ISODate("2017-04-24T19:11:06.630Z"),
    "wrongAttempts" : 2,
    "correctAttempts" : 7,
    "lastAssessed" : ISODate("2017-04-24T19:10:06.630Z"),
    "netCorrectAttempts" : 1
}

/* 15 */
{
    "_id" : ObjectId("58c3f7cccb4a8238e061bf18"),
    "question" : "What does the following code print out?:\n\nconsole.log(undefined == null)",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "false"
    ],
    "correctAnswers" : [ 
        "true"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-24T19:11:18.433Z"),
    "correctAttempts" : 3,
    "lastAssessed" : ISODate("2017-04-24T19:10:18.433Z"),
    "netCorrectAttempts" : 1
}

/* 16 */
{
    "_id" : ObjectId("58c3f801cb4a8238e061bf19"),
    "question" : "What does the below code print out?\n\nconsole.log(typeof(null))",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [],
    "correctAnswers" : [ 
        "object"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-24T19:11:31.988Z"),
    "lastAssessed" : ISODate("2017-04-24T19:10:31.988Z"),
    "correctAttempts" : 3,
    "netCorrectAttempts" : 1
}

/* 17 */
{
    "_id" : ObjectId("58c3f820cb4a8238e061bf1a"),
    "question" : "What does the below code print out?\n\nconsole.log(undefined === null)",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [],
    "correctAnswers" : [ 
        "false"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-23T14:12:15.456Z"),
    "lastAssessed" : ISODate("2017-04-24T09:46:16.042Z"),
    "correctAttempts" : 2
}

/* 18 */
{
    "_id" : ObjectId("58c3f875cb4a8238e061bf1b"),
    "question" : "What does the below code print out? console.log(NaN == '1')",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "true"
    ],
    "correctAnswers" : [ 
        "false"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-23T14:12:15.456Z"),
    "lastAssessed" : ISODate("2017-04-24T09:46:33.830Z"),
    "correctAttempts" : 2
}

/* 19 */
{
    "_id" : ObjectId("58c40deecb4a8238e061bf1f"),
    "question" : "What gets logged to the console when the user clicks on “Button 4”?\n\nfor (var i = 0; i < 5; i++) {\n  var btn = document.createElement('button')\n  btn.appendChild(document.createTextNode('Button ' + i))\n  btn.addEventListener('click', function(){ console.log(i)})\n  document.body.appendChild(btn)\n}",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "0", 
        "1", 
        "4"
    ],
    "correctAnswers" : [ 
        "5"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-23T14:12:15.456Z"),
    "wrongAttempts" : 2,
    "lastAssessed" : ISODate("2017-04-24T10:01:15.319Z"),
    "correctAttempts" : 2
}

/* 20 */
{
    "_id" : ObjectId("58c3f3d4cb4a8238e061bf15"),
    "question" : "The potential pitfall with using typeof bar === \"object\" to determine if bar is an object is that ___ is also considered to be of type object",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [],
    "correctAnswers" : [ 
        "null", 
        "array"
    ],
    "__v" : 8,
    "toBeAssessedNext" : ISODate("2017-04-23T09:58:12.092Z"),
    "correctAttempts" : 5,
    "lastAssessed" : ISODate("2017-04-23T09:58:12.092Z"),
    "explanation" : "typeof null === \"object\" is a long-standing bug in JS, but one that is likely never going to be fixed. Too much code on the Web relies on the bug and thus fixing it would cause a lot more bugs!\n\ntypeof [ ] === \"object\" this is the behavior of the typeof operator when its value is an host object which doesn't implement [[Call]]"
}

/* 21 */
{
    "_id" : ObjectId("58c56d7a5b0d5216fbdc8718"),
    "question" : "What does the below code print out in Node.js?\n\nconsole.log(this)",
    "createdAt" : ISODate("2017-04-21T10:40:04.696Z"),
    "wrongAnswers" : [ 
        "window", 
        "error", 
        "undefined"
    ],
    "correctAnswers" : [ 
        "global object", 
        "global"
    ],
    "__v" : 0,
    "toBeAssessedNext" : ISODate("2017-04-24T17:58:53.853Z"),
    "correctAttempts" : 5,
    "lastAssessed" : ISODate("2017-04-24T17:58:53.853Z"),
    "netCorrectAttempts" : 0,
    "wrongAttempts" : 6,
    "explanation" : "In Node.js the top-level scope is not the global scope; 'var something' inside an Node.js module will be local to that module."
}